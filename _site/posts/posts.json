[
  {
    "path": "posts/2022-06-03-expectativas-focus-com-rbcb/",
    "title": "Expectativas de Mercado da Pesquisa Focus no R",
    "description": "Obtendo as expectativas de mercado para os indicadores macroeconômicos da\nPesquisa Focus utilizando o R e o pacote {rbcb}.",
    "author": [
      {
        "name": "Wilson Freitas",
        "url": {}
      }
    ],
    "date": "2022-06-03",
    "categories": [
      "R",
      "bcb",
      "opendata"
    ],
    "contents": "\r\n\r\nContents\r\nFunção get_market_expectations\r\nConhecendo os valores retornados\r\nRealizando uma consulta mais elaborada\r\nVisualizando os dados\r\nSérie temporal das expectativas de IPCA\r\nSérie temporal com intervalo informado\r\n\r\n\r\nÉ possível obter as expectativas de mercado para diversos indicadores macroeconômicos da pesquisa Focus de forma totalmente automática utilizando o R.\r\nVamos utilizar o pacote {rbcb} para obter estes dados. O pacote {rbcb} é uma interface para algumas das diversas APIs do portal de dados abertos do Banco Central (link).\r\nAs expectativas de mercado para os indicadores macroeconômicos da pesquisa Focus são consolidadas em estatísticas diárias e divulgadas na API. Estas estatísticas são calculadas com base nas expectativas de mercado de diversos bancos, gestores de recursos e demais instituições do mercado financeiro. Os indicadores macroeconômicos são referentes a índices de preços, crescimento do PIB e da produção industrial, taxa de câmbio, taxa Selic, variáveis fiscais e indicadores do setor externo e são publicadas todo primeiro dia útil da semana.\r\nCarregando os pacotes utilizados.\r\n\r\n\r\nlibrary(dplyr)\r\nlibrary(ggplot2)\r\nlibrary(rbcb)\r\n\r\n\r\n\r\nFunção get_market_expectations\r\nA função get_market_expectations implementa a interface para a API de expectativas de mercado da pesquisa Focus. Vejamos os seus argumentos e o que podemos fazer com eles:\r\n\r\n\r\nget_market_expectations |> args()\r\n\r\n\r\nfunction (type = c(\"annual\", \"quarterly\", \"monthly\", \"inflation-12-months\", \r\n    \"top5s-monthly\", \"top5s-annual\", \"institutions\", \"selic\", \r\n    \"top5s-selic\"), indic = NULL, start_date = NULL, end_date = NULL, \r\n    keep_names = TRUE, ...) \r\nNULL\r\n\r\ntype: A API de expectativas possui diversos endpoints e o argumento type define qual deve ser utilizado. Se não for informado o valor annual será utilizado.\r\nannual, quarterly e monthly retorna, respectivamente, as expectativas anuais, trimestrais e mensais dos indicadores macroeconômicos\r\ninflation-12-months para expectativas de inflação nos próximos 12 meses\r\ntop5s-monthly e top5s-annual retorna as expectativas mensais e anuais para os indicadores do Top 5\r\ninstitutions expectativas informadas pelas instituições credenciadas\r\nselic expectativas de mercado SELIC\r\ntop5s-selic expectativas Top 5 para SELIC\r\n\r\nindic nome do indicador macroeconômico, é opcional, de forma, quando não for definido, todos os indicadores disponíveis para o endpoint serão retornados. Esse ponto é curioso, pois a documentação não é boa e informa indicadores que não são mais disponibilizados.\r\nstart_date e end_date definem as datas de início e fim para a consulta, são opcionais e caso não sejam informados, todo o período será retornado, o que não é recomendado pois onera os serviços de dados do BCB que já não são lá os melhores.\r\nkeep_names é um argumento utilizado internamente que não faz diferença para o usuário final.\r\n... aqui são passados argumentos adicionais para a API\r\n$select define as colunas retornadas na consulta: Nome, Idade\r\n$filter define filtros mais elaborados baseado nos valores das colunas: Nome eq 'João'\r\n$orderby define como as colunas devem ser ordenadas: Nome asc, Idade desc\r\n$skip define quantidade de linhas no começo que não devem ser retornadas\r\n$top define a quantidade de linhas que serão retornadas\r\n\r\nConhecendo os valores retornados\r\nCada endpoint possui o seu conjuto de colunas retornadas e isso pode mudar com o tempo, dessa maneira, para conhecer cada API, eu recomendo fortemente que a opção $top = 10 seja utilizada para limitar uma consulta inicial para conhecimento dos valores retornados.\r\n\r\n\r\nget_market_expectations(\"annual\",\r\n                        indic = \"IPCA\",\r\n                        `$top` = 10) |>\r\n  rmarkdown::paged_table()\r\n\r\n\r\n\r\n\r\n\r\nComo vemos, tem muito NA. Talvez seja por que estamos visualizando dados muito antigos, vamos reordenar para trazer os dados mais recentes. Para isso é necessário definir a opção $orderby.\r\n\r\n\r\nget_market_expectations(\"annual\",\r\n                        indic = \"IPCA\",\r\n                        `$top` = 10,\r\n                        `$orderby` = \"Data desc\") |>\r\n  rmarkdown::paged_table()\r\n\r\n\r\n\r\n\r\n\r\nJá ficou melhor, já é possível entender as informações retornadas.\r\nRealizando uma consulta mais elaborada\r\nPodemos definir melhor a consulta e o que queremos dela:\r\nretornar as colunas: Data, DataReferencia, Media, Mediana, Maximo, Minimo e DesvioPadrao. Para isso vamos utilizar a opção $select.\r\nfiltrar baseCalculo igual a 0 e DataReferencia igual a 2021 ou 2022 com a opção $filter.\r\nCom data inicial igual a 2020-12-01, para pegar os dados desde dezembro de 2020\r\n\r\n\r\ndf <- get_market_expectations(\"annual\",\r\n                              indic = \"IPCA\",\r\n                              start_date = \"2020-12-01\",\r\n                              `$filter` = \"(DataReferencia eq '2021' or DataReferencia eq '2022') and baseCalculo eq 0\",\r\n                              `$select` = \"Data,DataReferencia,Media,Mediana,DesvioPadrao,Maximo,Minimo\")\r\ndf |> head() |> rmarkdown::paged_table()\r\n\r\n\r\n\r\n\r\n\r\nVisualizando os dados\r\nCom as estatísticas de expectativas de IPCA carregadas podemos começar a visualização dos dados. Estas expectativas são referentes a inflação cheia para os anos de 2021 e 2022 (DataReferencia). O filtro baseCalculo igual a 1 refere-se ao prazo de validade das expectativas informadas. Esta coluna pode ser 0 ou 1. baseCalculo igual a 0 considera as expectativas informadas nos últimos 30 dias no cálculo das estatísticas e baseCalculo igual a 1 considera os últimos 4 dias. Foi escolhida baseCalculo igual a 0 por ter uma amostra maior, consequência do período maior.\r\nSérie temporal das expectativas de IPCA\r\nVamos começar observando a série temporal das expectativas para cada DataReferencia.\r\n\r\n\r\ndf |>\r\n  ggplot(aes(x = Data, y = Mediana, group = DataReferencia, colour = DataReferencia)) +\r\n  geom_line() +\r\n  labs(\r\n    title = \"Expectativas para IPCA em 2021 e 2022\",\r\n    subtitle = \"Média das expectativas de IPCA\",\r\n    caption = \"Dados da Pesquisa Focus obtidos com pacote rbcb\",\r\n    x = \"Data\", y = \"Inflação\"\r\n  )\r\n\r\n\r\n\r\n\r\nCurioso ver como as expectativas de inflação para 2021 mudaram ao longo de 2021, ou seja, erra-se miseravelmente. As expectativas para 2022 mudam menos, bem, isso até virar o ano.\r\nSérie temporal com intervalo informado\r\nVamos olhar agora apenas a DataReferencia 2021 e colocar as linhas de máximo e mínimo para termos uma ideia de intervalo para as expectativas.\r\n\r\n\r\ndf |>\r\n  filter(DataReferencia == 2021) |>\r\n  ggplot(aes(x = Data)) +\r\n  geom_line(aes(y = Mediana), colour = \"black\") +\r\n  geom_line(aes(y = Maximo), colour = \"grey\") +\r\n  geom_line(aes(y = Minimo), colour = \"grey\") +\r\n  geom_ribbon(aes(ymin = Minimo, ymax = Maximo), fill = \"blue\", alpha = 0.3) +\r\n  labs(\r\n    title = \"Expectativas para IPCA em 2021\",\r\n    subtitle = \"Média das expectativas de IPCA com intervalo definido por máximo e mínimo da amostra\",\r\n    caption = \"Dados da Pesquisa Focus obtidos com pacote rbcb\",\r\n    x = \"Data\", y = \"Inflação\"\r\n  )\r\n\r\n\r\n\r\n\r\nInteressante ver como as pesquisas erram e como, mesmo os mais ousados, não saem muito do consenso. Entendo que esse é um mecanismo necessário para se colocar o “bode na sala”, entretanto, erra-se miseravelmente, são muitos vieses envolvidos.\r\n\r\n\r\n\r\n",
    "preview": "posts/2022-06-03-expectativas-focus-com-rbcb/expectativas-focus-com-rbcb_files/figure-html5/ipca-mediana-desviopadrao-1.png",
    "last_modified": "2022-06-05T06:59:26-03:00",
    "input_file": "expectativas-focus-com-rbcb.knit.md",
    "preview_width": 1248,
    "preview_height": 768
  },
  {
    "path": "posts/2022-01-17-dados-bcb-com-python/",
    "title": "Obtendo Dados do BCB com Python",
    "description": "Obter os dados para análise de forma simples é fundamental e necessário.",
    "author": [
      {
        "name": "Wilson Freitas",
        "url": {}
      }
    ],
    "date": "2022-01-17",
    "categories": [
      "Python",
      "bcb",
      "opendata"
    ],
    "contents": "\r\nObter os dados para análise de forma simples é fundamental e necessário.\r\nDepois de passar alguns anos mantendo o pacote {rbcb} que faz a integração do R com as APIs de dados abertos do Banco Central, decidi fazer o port para Python.\r\nEm parte porque o PyPI (Python Package Index - repositório de pacotes do Python) é bem menos burocrático que o CRAN (repositório de pacote do R), mas nos últimos anos tenho mexido mais com Python e fazia sentido portar algumas ferramentas.\r\nO pacote {python-bcb} é a contraparte em Python do pacote {rbcb} do R.\r\nSó que acabou ficando maior, não por causa do Python, mas por que eu estava com tempo e paciência e acabei implementando parte da especificação OData. Isso permite de forma bem simples integrar diversas APIs do Banco Central que implementam essa especificação. Na minha última contagem tinha 39 APIs nessa estrutura.\r\nO pacote {python-bcb} traz as seguintes APIs:\r\nSGS\r\nSéries de Moedas do Conversor de Moedas do Banco Central\r\nExpectativas do FOCUS\r\nBoletins da PTAX (abertura, 3 intradiários, fechamento)\r\nDados selecionados de instituições financeiras (IFDATA)\r\nAgora o que dá mais trabalho ao fazer a integração de uma API é escrever a documentação😉 dado que as APIs não são padronizadas.\r\nVou comunicando aqui na medida que novas APIs forem sendo integradas.\r\nObviamente espero todo o tipo de comentários e sugestões.\r\nDocumentação do projeto: https://wilsonfreitas.github.io/python-bcb/index.html\r\nLink do projeto: https://github.com/wilsonfreitas/python-bcb\r\nNa imagem segue um exemplo que como utilizar a API de Expectativas do FOCUS para obter um DataFrame das expectativas de IPCA de 2021 ao longo de 2021.\r\n\r\n\r\n\r\n\r\n",
    "preview": "posts/2022-01-17-dados-bcb-com-python/expectativas.png",
    "last_modified": "2022-06-03T06:11:37-03:00",
    "input_file": {},
    "preview_width": 1328,
    "preview_height": 856
  }
]
